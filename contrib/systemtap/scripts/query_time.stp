/*
 * CUBRID SystemTap Support
 *
 * USAGE: stap -k query_time.stp
 *
 * DESCRIPTION:
 * This script monitors the total execution time and time spent in I/O
 * operations for each query.
 *
 * The script outputs the results for each query, when it has ended.
 */
 
global startts;
global io_time = 0;
global startts_io_write;
global io_agg;
global startts_io_read;

probe process("cub_server").library("*").mark("query_exec_start")
{
	startts[tid()] = gettimeofday_ns ();
}

probe process("cub_server").library("*").mark("io_write_start")
{
	startts_io_write[tid()] = gettimeofday_ns ();
}

probe process("cub_server").library("*").mark("io_write_end")
{
	io_agg[tid()] <<< gettimeofday_ns () - startts_io_write[tid()];
}

probe process("cub_server").library("*").mark("io_read_start")
{
	startts_io_read[tid()] = gettimeofday_ns ();
}

probe process("cub_server").library("*").mark("io_read_end")
{
	io_agg[tid()] <<< gettimeofday_ns () - startts_io_read[tid()];
}

probe process("cub_server").library("*").mark("query_exec_end")
{
	query_str = user_string($arg1);
	printf ("SQL query: %s\n", query_str);
	total_time = gettimeofday_ns () - startts[tid()];
	io_time = @sum(io_agg[tid()]);
	printf("Total execution time: %d.%06d sec \n", total_time / 1000000, total_time % 1000000);
	printf ("IO time: %d.%06d sec\n", io_time / 1000000, io_time % 1000000);
}
  
